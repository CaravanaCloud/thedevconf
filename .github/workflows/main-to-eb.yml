name: DeployMainToElasticBeanstalk

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: tdc-devenv-20200814
    env:
      AWS_REGION: ${{secrets.AWS_REGION}}
      EB_APP: ${{secrets.EB_APP}}
      EB_ENV: ${{secrets.EB_ENV}}
      EB_VERSION: ${{github.sha}}
      EB_BUCKET: ${{secrets.EB_BUCKET}}
      EB_VERSION_KEY: ${{github.sha}}

    steps:
      - uses: actions/checkout@v2

      - uses: nelonoel/branch-name@v1.0.1

      - uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.2.0'
          java: 'java11'
          arch: 'amd64'

      - run: java -version

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile all modules
        run: mvn --batch-mode --update-snapshots clean install
        working-directory: tdc-commons
        env:
          MAVEN_OPTS: "-DskipTests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

      - name: Push API container image
        run: mvn --batch-mode --update-snapshots package
        working-directory: tdc-api
        env:
          MAVEN_OPTS: "-DskipTests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
          QUARKUS_DATASOURCE_JDBC_URL: ${{secrets.QUARKUS_DATASOURCE_JDBC_URL}}
          QUARKUS_DATASOURCE_USERNAME: ${{secrets.QUARKUS_DATASOURCE_USERNAME}}
          QUARKUS_DATASOURCE_PASSWORD: ${{secrets.QUARKUS_DATASOURCE_PASSWORD}}
          QUARKUS_DATASOURCE_DB_KIND: mysql
          QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: none
          QUARKUS_CONTAINER_IMAGE_USERNAME: ${{ secrets.IMAGE_USERNAME }}
          QUARKUS_CONTAINER_IMAGE_PASSWORD: ${{ secrets.IMAGE_PASSWORD }}
          QUARKUS_CONTAINER_IMAGE_GROUP: caravanacloud
          QUARKUS_CONTAINER_IMAGE_NAME: tdc-api
          QUARKUS_CONTAINER_IMAGE_TAG: ${{github.sha}}
          QUARKUS_CONTAINER_IMAGE_PUSH: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Get last commit id
        run: echo "${{github.sha}}"

      - name: Genrate elastic beanstalk deployment descriptor
        run: envsubst < src/main/eb/Dockerrun.aws.json > target/Dockerrun.aws.json
        working-directory: tdc-api
        env:
          GIT_SHA: ${{github.sha}}

      - name: check dd
        run: cat target/Dockerrun.aws.json
        working-directory: tdc-api

      - name: upload dd to s3
        run: aws s3 cp target/Dockerrun.aws.json "s3://$EB_BUCKET/$EB_VERSION_KEY/Dockerrun.aws.json"
        working-directory: tdc-api

      - name: create eb version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name "$EB_APP" \
          --version-label "$EB_VERSION" \
          --source-bundle S3Bucket="$EB_BUCKET",S3Key="$EB_VERSION_KEY/Dockerrun.aws.json"

      - name: update environment
        run: |
          aws elasticbeanstalk update-environment \
          --application-name "$EB_APP" \
          --environment-name "$EB_ENV" \
          --version-label "$EB_VERSION"

      - name: say bye
        run: echo bye
