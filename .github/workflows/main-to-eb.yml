name: DeployMainToElasticBeanstalk

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "us-west-2"


    steps:
      - uses: actions/checkout@v2

      - uses: nelonoel/branch-name@v1.0.1

      - uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.2.0'
          java: 'java11'
          arch: 'amd64'

      - run: java -version

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile all modules
        run: mvn --batch-mode --update-snapshots clean install
        working-directory: tdc-commons
        env:
          MAVEN_OPTS: "-DskipTests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

      - name: Push API container image
        run: mvn --batch-mode --update-snapshots package
        working-directory: tdc-api
        env:
          MAVEN_OPTS: "-DskipTests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
          QUARKUS_DATASOURCE_JDBC_URL: jdbc:h2:mem:tdcdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false;MODE=MYSQL
          QUARKUS_DATASOURCE_USERNAME: sa
          QUARKUS_DATASOURCE_PASSWORD: ""
          QUARKUS_DATASOURCE_DB_KIND: h2
          QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: none
          QUARKUS_CONTAINER_IMAGE_USERNAME: ${{ secrets.IMAGE_USERNAME }}
          QUARKUS_CONTAINER_IMAGE_PASSWORD: ${{ secrets.IMAGE_PASSWORD }}
          QUARKUS_CONTAINER_IMAGE_GROUP: caravanacloud
          QUARKUS_CONTAINER_IMAGE_NAME: tdc-api
          QUARKUS_CONTAINER_IMAGE_TAG: ${{github.sha}}
          QUARKUS_CONTAINER_IMAGE_PUSH: true
          QUARKUS_CONTAINER_IMAGE_REGISTRY: quay.io

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Pegar o ID do commit
        run: echo "${{github.sha}}"




